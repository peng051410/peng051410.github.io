<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>arts on I&#39;m company</title>
    <link>http://blog.imcompany.cn/categories/arts/</link>
    <description>Recent content in arts on I&#39;m company</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>京ICP备17037246号</copyright>
    <lastBuildDate>Wed, 08 Apr 2020 21:45:56 +0800</lastBuildDate>
    
	<atom:link href="http://blog.imcompany.cn/categories/arts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2020-ARTS-打卡第十三天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-013/</link>
      <pubDate>Wed, 08 Apr 2020 21:45:56 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-013/</guid>
      <description>Algorithm 题目 题目描述 给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第十二天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-012/</link>
      <pubDate>Mon, 30 Mar 2020 13:23:29 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-012/</guid>
      <description>Algorithm 题目 题目描述 给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。242 valid anagram 题目解答 可以使用先排序后判断的方法来实现，这样的时间</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第十一天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-011/</link>
      <pubDate>Mon, 23 Mar 2020 09:49:04 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-011/</guid>
      <description>Algorithm 题目 题目描述 给定一个数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动窗口每</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第十天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-010/</link>
      <pubDate>Mon, 16 Mar 2020 17:06:14 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-010/</guid>
      <description>Algorithm 题目 题目描述 设计一个找到数据流中第K大元素的类（class）。注意是排序后的第K大元素，不是第K个不同的元素。703 数据流中的第K大元素 题</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第九天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-009/</link>
      <pubDate>Sat, 07 Mar 2020 14:40:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-009/</guid>
      <description>Algorithm 题目一 题目描述 使用栈实现队列的操作：push(), peek(), pop(), empty()操作，只能使用标准的栈操作 &amp;ndash; 也就是只有 push to top, peek/pop from top, size, 和 is empty 操作是合法的</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第八天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-008/</link>
      <pubDate>Sat, 29 Feb 2020 14:00:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-008/</guid>
      <description>Algorithm 题目描述 在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。 Example 输入: [3,2,1,5,6,4] 和 k = 2</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第七天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-007/</link>
      <pubDate>Sat, 22 Feb 2020 14:30:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-007/</guid>
      <description>Algorithm 题目描述 给定一个非负整数 num，反复将各个位上的数字相加，直到结果为一位数。258.各位相加 Example 输入: 38 输出: 2 解释: 各位相加的过程为：3 +</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第六天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-006/</link>
      <pubDate>Thu, 13 Feb 2020 19:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-006/</guid>
      <description>Algorithm 题目描述 设计你的循环队列实现，支持入队，出队，获取队首元素，获取队尾元素 题目解答 采用数组可以实现，由于要达到循环效果，主要要考虑队头与队尾</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第五天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-005/</link>
      <pubDate>Thu, 06 Feb 2020 11:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-005/</guid>
      <description>Algorithm 题目描述 给定一个只包括 &amp;lsquo;(&#39;，&#39;)&#39;，&#39;{&#39;，&#39;}&#39;，&#39;[&#39;，&#39;]&amp;rsquo; 的字符串，判断字符串是否有效。leetcode</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第四天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-004/</link>
      <pubDate>Sat, 01 Feb 2020 13:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-004/</guid>
      <description>Algorithm 题目描述 给定一个链表，判断链表中是否有环。 Example 输入：head = [3,2,0,-4], pos = 1 输出：true 解释：链表中有一个环，其尾部连接到第二个节点。 题目解答 首</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第三天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-003/</link>
      <pubDate>Fri, 24 Jan 2020 16:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-003/</guid>
      <description>Algorithm 题目描述 反转一个单链表。 Example 输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL 输出: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL 题目解答 迭代解法 1 2 3 4 5 6 7 8 9 10 11 12 13 class Solution3 { public ListNode reverseList(ListNode head) { ListNode prev = null; ListNode current = head; while (current != null) { ListNode tempNode = current.next; current.next =</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第二天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-002/</link>
      <pubDate>Thu, 16 Jan 2020 19:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-002/</guid>
      <description>Algorithm 题目描述 判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。 Example 输入123-&amp;gt;true 输入-123</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第一天</title>
      <link>http://blog.imcompany.cn/post/2020-arts-001/</link>
      <pubDate>Wed, 08 Jan 2020 18:54:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/2020-arts-001/</guid>
      <description>Algorithm 题目描述 给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。 Example 输入123-&amp;gt;321 输入-123-&amp;gt;-321 输入1</description>
    </item>
    
    <item>
      <title>ARTS-打卡第一天</title>
      <link>http://blog.imcompany.cn/post/arts-001/</link>
      <pubDate>Thu, 09 May 2019 17:34:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/post/arts-001/</guid>
      <description>Algorithm LeetCode 第一题 题目描述 给一个int数组，返回数组中两个数字相加的和是目标 数的下标。可以假设每个输入只有一个解决方案，并且不能使用同一个元素两次。</description>
    </item>
    
  </channel>
</rss>