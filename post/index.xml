<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on I&#39;m company</title>
    <link>http://blog.imcompany.cn/post/</link>
    <description>Recent content in Posts on I&#39;m company</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>京ICP备17037246号</copyright>
    <lastBuildDate>Mon, 12 Dec 2022 19:14:00 +0800</lastBuildDate><atom:link href="http://blog.imcompany.cn/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JAVA中如何判断对象与类的关系之-instanceOf, Class.isInstance, Class.isAssignableFrom</title>
      <link>http://blog.imcompany.cn/2022/12/java%E4%B8%AD%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E4%B8%8E%E7%B1%BB%E7%9A%84%E5%85%B3%E7%B3%BB%E4%B9%8B-instanceof-class.isinstance-class.isassignablefrom/</link>
      <pubDate>Mon, 12 Dec 2022 19:14:00 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/12/java%E4%B8%AD%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E4%B8%8E%E7%B1%BB%E7%9A%84%E5%85%B3%E7%B3%BB%E4%B9%8B-instanceof-class.isinstance-class.isassignablefrom/</guid>
      <description>前言 在开发中，常常会碰到检查JAVA对象是不是指定类型的情况，在JAVA中提供了以下几种方法实现此类需求: instanceOf Class.isInstance() Class.isAssignbleFrom() 今天对此三种实现进行具体学习</description>
    </item>
    
    <item>
      <title>Linux-man</title>
      <link>http://blog.imcompany.cn/2022/12/linux-man/</link>
      <pubDate>Thu, 08 Dec 2022 11:29:00 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/12/linux-man/</guid>
      <description>功能 显示命令行命令的帮助手册 排版 Man页面是按章节(section)进行分配的，在Man中包含9个特定章节 特定章节 可执行程序或者Shell命</description>
    </item>
    
    <item>
      <title>Java枚举学习</title>
      <link>http://blog.imcompany.cn/2022/11/java%E6%9E%9A%E4%B8%BE%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Wed, 23 Nov 2022 12:01:00 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/11/java%E6%9E%9A%E4%B8%BE%E5%AD%A6%E4%B9%A0/</guid>
      <description>枚举 枚举是指包含指定个数特定类型的实例类，所有枚举类默认都继承 java.lang.Enum ，枚举类是可序列化、可比较的 1 2 3 4 5 6 7 8 public enum Person { MAN, WOMAN; } public static void main(String[] args) { System.out.println(Person.MAN); } 1</description>
    </item>
    
    <item>
      <title>Org-babel学习记录</title>
      <link>http://blog.imcompany.cn/2022/09/org-babel%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Wed, 28 Sep 2022 15:12:00 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/09/org-babel%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</guid>
      <description>基础 匿名代码段 命名的代码块 命名的代码块与结果项是可以分开的，orgmode通过代码块的名称进行匹配 定义参数 参数变量根据对应语言表现方式不同 :var</description>
    </item>
    
    <item>
      <title>Org-anki, Org与Anki的完美结合</title>
      <link>http://blog.imcompany.cn/2022/09/org-anki-org%E4%B8%8Eanki%E7%9A%84%E5%AE%8C%E7%BE%8E%E7%BB%93%E5%90%88/</link>
      <pubDate>Tue, 27 Sep 2022 15:03:00 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/09/org-anki-org%E4%B8%8Eanki%E7%9A%84%E5%AE%8C%E7%BE%8E%E7%BB%93%E5%90%88/</guid>
      <description>Org-anki Org-anki是一个同步Org中note到Anki的Emacs包，它的实现非常简单灵活，文档书写体验好 安装 1 2 (use-package org-anki :commands (org-anki-sync-entry org-anki-sync-all)) 支持的note 基</description>
    </item>
    
    <item>
      <title>Apollo不更新配置了？</title>
      <link>http://blog.imcompany.cn/2022/09/apollo%E4%B8%8D%E6%9B%B4%E6%96%B0%E9%85%8D%E7%BD%AE%E4%BA%86/</link>
      <pubDate>Fri, 16 Sep 2022 15:22:00 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/09/apollo%E4%B8%8D%E6%9B%B4%E6%96%B0%E9%85%8D%E7%BD%AE%E4%BA%86/</guid>
      <description>问题描述 近期改造服务调用，需要使用Apollo配置进行灵活切换，上线后发现有些机器配置生效，有些配置未生效，开发小伙伴反馈此问题发生有一段时</description>
    </item>
    
    <item>
      <title>那些高效的VSCode插件</title>
      <link>http://blog.imcompany.cn/2022/09/%E9%82%A3%E4%BA%9B%E9%AB%98%E6%95%88%E7%9A%84vscode%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Mon, 05 Sep 2022 17:45:00 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/09/%E9%82%A3%E4%BA%9B%E9%AB%98%E6%95%88%E7%9A%84vscode%E6%8F%92%E4%BB%B6/</guid>
      <description>必备 angelo-breuer.clock 在状态栏增加时间显示 chadalen.vscode-jetbrains-icon-theme 类JetBrains的文件图标 codezombiech.gitignore .ignore文件支持 wmaurer.change-case 快速切换选择单词的格式，支持驼峰，大小写等 lucax88x.codeacejumper 快速跳转到指</description>
    </item>
    
    <item>
      <title>用Riggrep进行快速搜索</title>
      <link>http://blog.imcompany.cn/2022/08/%E7%94%A8riggrep%E8%BF%9B%E8%A1%8C%E5%BF%AB%E9%80%9F%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Tue, 30 Aug 2022 20:01:00 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/08/%E7%94%A8riggrep%E8%BF%9B%E8%A1%8C%E5%BF%AB%E9%80%9F%E6%90%9C%E7%B4%A2/</guid>
      <description>为什么要学习riggrep? Riggrep快 天下武功，唯快不破 Riggrep聪明 默认会排除 .gitignore/.ignore/.rgignore 文件下的配置和隐藏文件、二进制文件 安装 1 brew install ripgrep 使</description>
    </item>
    
    <item>
      <title>Spring的RedisTemplate如何与Lettuce进行交互的</title>
      <link>http://blog.imcompany.cn/2022/06/spring%E7%9A%84redistemplate%E5%A6%82%E4%BD%95%E4%B8%8Elettuce%E8%BF%9B%E8%A1%8C%E4%BA%A4%E4%BA%92%E7%9A%84/</link>
      <pubDate>Wed, 01 Jun 2022 11:04:00 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/06/spring%E7%9A%84redistemplate%E5%A6%82%E4%BD%95%E4%B8%8Elettuce%E8%BF%9B%E8%A1%8C%E4%BA%A4%E4%BA%92%E7%9A%84/</guid>
      <description>问题 SpringWebFlux项目，使用的Redis客户端是Lettuce(基于异步)，在Spring中封装了两种操作Redis的模板 RedisTemplate 与 ReactiveRedisTemplate</description>
    </item>
    
    <item>
      <title>Springwebflux源码学习-服务启动流程</title>
      <link>http://blog.imcompany.cn/2022/05/springwebflux%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Tue, 24 May 2022 17:37:00 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/05/springwebflux%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid>
      <description>学习目标 理解WebFlux核心组件HttpHandler、WebHandler的创建过程 理解DispatcherHandler如何映射请求u</description>
    </item>
    
    <item>
      <title>开发中会遇到的Maven问题解惑</title>
      <link>http://blog.imcompany.cn/2022/04/%E5%BC%80%E5%8F%91%E4%B8%AD%E4%BC%9A%E9%81%87%E5%88%B0%E7%9A%84maven%E9%97%AE%E9%A2%98%E8%A7%A3%E6%83%91/</link>
      <pubDate>Thu, 07 Apr 2022 19:30:00 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/04/%E5%BC%80%E5%8F%91%E4%B8%AD%E4%BC%9A%E9%81%87%E5%88%B0%E7%9A%84maven%E9%97%AE%E9%A2%98%E8%A7%A3%E6%83%91/</guid>
      <description>多模块系统版本控制问题 在开发想保持项目下的所有子模块版本一致，可以使用${rversion}变量 配置父pom 1 2 3 4 5 6 7 8 9 10 11 12 &amp;lt;groupId&amp;gt;cn.imcompany&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;big-parent&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${revision}&amp;lt;/version&amp;gt; &amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt;</description>
    </item>
    
    <item>
      <title>Linux代码结构学习</title>
      <link>http://blog.imcompany.cn/2022/04/linux%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Wed, 06 Apr 2022 18:53:00 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/04/linux%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/</guid>
      <description>Linux代码结构 准备学习Linux，看源码是少不了的，先对Linux源码有个大体认识(基于linux4.13) 代码主要文件解析 Makefile 这是整个源</description>
    </item>
    
    <item>
      <title>记一次SpringWebflux框架下堆外OOM排查经历</title>
      <link>http://blog.imcompany.cn/2022/03/%E8%AE%B0%E4%B8%80%E6%AC%A1springwebflux%E6%A1%86%E6%9E%B6%E4%B8%8B%E5%A0%86%E5%A4%96oom%E6%8E%92%E6%9F%A5%E7%BB%8F%E5%8E%86/</link>
      <pubDate>Thu, 31 Mar 2022 20:12:23 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2022/03/%E8%AE%B0%E4%B8%80%E6%AC%A1springwebflux%E6%A1%86%E6%9E%B6%E4%B8%8B%E5%A0%86%E5%A4%96oom%E6%8E%92%E6%9F%A5%E7%BB%8F%E5%8E%86/</guid>
      <description>症状 生产环境业务页面打不开，看错误日志是 OutOfDirectMemoryError (OOM)了，详情报错信息如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33</description>
    </item>
    
    <item>
      <title>那些提高效率MAC软件(全程免费)</title>
      <link>http://blog.imcompany.cn/2021/10/%E9%82%A3%E4%BA%9B%E6%8F%90%E9%AB%98%E6%95%88%E7%8E%87mac%E8%BD%AF%E4%BB%B6%E5%85%A8%E7%A8%8B%E5%85%8D%E8%B4%B9/</link>
      <pubDate>Mon, 25 Oct 2021 20:12:23 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2021/10/%E9%82%A3%E4%BA%9B%E6%8F%90%E9%AB%98%E6%95%88%E7%8E%87mac%E8%BD%AF%E4%BB%B6%E5%85%A8%E7%A8%8B%E5%85%8D%E8%B4%B9/</guid>
      <description>NTFS 支持MAC电脑读取NTFS格式文件 eul 监控MAC运行状态的工具 uPic 文件与图片云端上传工具 Sequel-Ace MAC上数据库管理工具，支持Mysql与MariaD</description>
    </item>
    
    <item>
      <title>让好代码生生不息-更好的使用String</title>
      <link>http://blog.imcompany.cn/2021/08/%E8%AE%A9%E5%A5%BD%E4%BB%A3%E7%A0%81%E7%94%9F%E7%94%9F%E4%B8%8D%E6%81%AF-%E6%9B%B4%E5%A5%BD%E7%9A%84%E4%BD%BF%E7%94%A8string/</link>
      <pubDate>Mon, 23 Aug 2021 14:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2021/08/%E8%AE%A9%E5%A5%BD%E4%BB%A3%E7%A0%81%E7%94%9F%E7%94%9F%E4%B8%8D%E6%81%AF-%E6%9B%B4%E5%A5%BD%E7%9A%84%E4%BD%BF%E7%94%A8string/</guid>
      <description>开发中常用的String操作 开发中经常用到的操作有： 格式化/日志格式化 字符串判断 字符串处理，常见的如处理字符串的第一个/最后一个字符 String.format Str</description>
    </item>
    
    <item>
      <title>让好代码生生不息-更好的对待NULL</title>
      <link>http://blog.imcompany.cn/2021/07/%E8%AE%A9%E5%A5%BD%E4%BB%A3%E7%A0%81%E7%94%9F%E7%94%9F%E4%B8%8D%E6%81%AF-%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%AF%B9%E5%BE%85null/</link>
      <pubDate>Sat, 17 Jul 2021 16:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2021/07/%E8%AE%A9%E5%A5%BD%E4%BB%A3%E7%A0%81%E7%94%9F%E7%94%9F%E4%B8%8D%E6%81%AF-%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%AF%B9%E5%BE%85null/</guid>
      <description>什么样的代码是好代码 易读的代码，行云流水的代码 JAVA中的NULL处理 众所周知，在Java代码中总是少不了一堆的判null逻辑，在代码bug</description>
    </item>
    
    <item>
      <title>JAVA中获取调用栈帧的最优方式</title>
      <link>http://blog.imcompany.cn/2021/04/java%E4%B8%AD%E8%8E%B7%E5%8F%96%E8%B0%83%E7%94%A8%E6%A0%88%E5%B8%A7%E7%9A%84%E6%9C%80%E4%BC%98%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Tue, 20 Apr 2021 19:30:23 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2021/04/java%E4%B8%AD%E8%8E%B7%E5%8F%96%E8%B0%83%E7%94%A8%E6%A0%88%E5%B8%A7%E7%9A%84%E6%9C%80%E4%BC%98%E6%96%B9%E5%BC%8F/</guid>
      <description>前言 近期在做日志优化，需要记录业务日志，日志内容包括业务的请求、响应信息。当然还应该有具体的调用方法位置、日志的所在的方法等通用信息。 解决方</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第十四天</title>
      <link>http://blog.imcompany.cn/2020/04/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%A4%A9/</link>
      <pubDate>Mon, 20 Apr 2020 09:12:41 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/04/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%A4%A9/</guid>
      <description>Algorithm 题目 题目描述 98.验证二叉搜索树，给定一个二叉树，判断其是否是一个有效的二叉搜索树。假设一个二叉搜索树具有如下特征： 节点的左子树只包含小于</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第十三天</title>
      <link>http://blog.imcompany.cn/2020/04/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%8D%81%E4%B8%89%E5%A4%A9/</link>
      <pubDate>Wed, 08 Apr 2020 21:45:56 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/04/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%8D%81%E4%B8%89%E5%A4%A9/</guid>
      <description>Algorithm 题目 题目描述 给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第十二天</title>
      <link>http://blog.imcompany.cn/2020/03/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%A4%A9/</link>
      <pubDate>Mon, 30 Mar 2020 13:23:29 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/03/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%A4%A9/</guid>
      <description>Algorithm 题目 题目描述 给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。242 valid anagram 题目解答 可以使用先排序后判断的方法来实现，这样的时间</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第十一天</title>
      <link>http://blog.imcompany.cn/2020/03/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%8D%81%E4%B8%80%E5%A4%A9/</link>
      <pubDate>Mon, 23 Mar 2020 09:49:04 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/03/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%8D%81%E4%B8%80%E5%A4%A9/</guid>
      <description>Algorithm 题目 题目描述 给定一个数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动窗口每</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第十天</title>
      <link>http://blog.imcompany.cn/2020/03/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%8D%81%E5%A4%A9/</link>
      <pubDate>Mon, 16 Mar 2020 17:06:14 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/03/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%8D%81%E5%A4%A9/</guid>
      <description>Algorithm 题目 题目描述 设计一个找到数据流中第K大元素的类（class）。注意是排序后的第K大元素，不是第K个不同的元素。703 数据流中的第K大元素 题</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第九天</title>
      <link>http://blog.imcompany.cn/2020/03/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%B9%9D%E5%A4%A9/</link>
      <pubDate>Sat, 07 Mar 2020 14:40:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/03/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%B9%9D%E5%A4%A9/</guid>
      <description>Algorithm 题目一 题目描述 使用栈实现队列的操作：push(), peek(), pop(), empty()操作，只能使用标准的栈操作 &amp;ndash; 也就是只有 push to top, peek/pop from top, size, 和 is empty 操作是合法的</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第八天</title>
      <link>http://blog.imcompany.cn/2020/02/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%85%AB%E5%A4%A9/</link>
      <pubDate>Sat, 29 Feb 2020 14:00:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/02/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%85%AB%E5%A4%A9/</guid>
      <description>Algorithm 题目描述 在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。 Example 输入: [3,2,1,5,6,4] 和 k = 2</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第七天</title>
      <link>http://blog.imcompany.cn/2020/02/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%B8%83%E5%A4%A9/</link>
      <pubDate>Sat, 22 Feb 2020 14:30:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/02/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%B8%83%E5%A4%A9/</guid>
      <description>Algorithm 题目描述 给定一个非负整数 num，反复将各个位上的数字相加，直到结果为一位数。258.各位相加 Example 输入: 38 输出: 2 解释: 各位相加的过程为：3 +</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第六天</title>
      <link>http://blog.imcompany.cn/2020/02/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%85%AD%E5%A4%A9/</link>
      <pubDate>Thu, 13 Feb 2020 19:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/02/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%85%AD%E5%A4%A9/</guid>
      <description>Algorithm 题目描述 设计你的循环队列实现，支持入队，出队，获取队首元素，获取队尾元素 题目解答 采用数组可以实现，由于要达到循环效果，主要要考虑队头与队尾</description>
    </item>
    
    <item>
      <title>Mac上使用网易Mumu模拟器踩坑指北</title>
      <link>http://blog.imcompany.cn/2020/02/mac%E4%B8%8A%E4%BD%BF%E7%94%A8%E7%BD%91%E6%98%93mumu%E6%A8%A1%E6%8B%9F%E5%99%A8%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8C%97/</link>
      <pubDate>Tue, 11 Feb 2020 16:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/02/mac%E4%B8%8A%E4%BD%BF%E7%94%A8%E7%BD%91%E6%98%93mumu%E6%A8%A1%E6%8B%9F%E5%99%A8%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8C%97/</guid>
      <description>前言 为了给mac找一款合适的android模拟器，先前使用的Nox player，但是老哥这Mac版本好几年都不更新了，使用的VirtualB</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第五天</title>
      <link>http://blog.imcompany.cn/2020/02/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%BA%94%E5%A4%A9/</link>
      <pubDate>Thu, 06 Feb 2020 11:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/02/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%BA%94%E5%A4%A9/</guid>
      <description>Algorithm 题目描述 给定一个只包括 &amp;lsquo;(&amp;rsquo;，&amp;rsquo;)&amp;rsquo;，&amp;rsquo;{&amp;rsquo;，&amp;rsquo;}&amp;r</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第四天</title>
      <link>http://blog.imcompany.cn/2020/02/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%9B%9B%E5%A4%A9/</link>
      <pubDate>Sat, 01 Feb 2020 13:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/02/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E5%9B%9B%E5%A4%A9/</guid>
      <description>Algorithm 题目描述 给定一个链表，判断链表中是否有环。 Example 输入：head = [3,2,0,-4], pos = 1 输出：true 解释：链表中有一个环，其尾部连接到第二个节点。 题目解答 首</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第三天</title>
      <link>http://blog.imcompany.cn/2020/01/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%B8%89%E5%A4%A9/</link>
      <pubDate>Fri, 24 Jan 2020 16:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/01/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%B8%89%E5%A4%A9/</guid>
      <description>Algorithm 题目描述 反转一个单链表。 Example 输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL 输出: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL 题目解答 迭代解法 1 2 3 4 5 6 7 8 9 10 11 12 13 class Solution3 { public ListNode reverseList(ListNode head) { ListNode prev = null; ListNode current = head; while (current != null) { ListNode tempNode = current.next; current.next =</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第二天</title>
      <link>http://blog.imcompany.cn/2020/01/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%BA%8C%E5%A4%A9/</link>
      <pubDate>Thu, 16 Jan 2020 19:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/01/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%BA%8C%E5%A4%A9/</guid>
      <description>Algorithm 题目描述 判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。 Example 输入123-&amp;gt;true 输入-123</description>
    </item>
    
    <item>
      <title>2020-ARTS-打卡第一天</title>
      <link>http://blog.imcompany.cn/2020/01/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%B8%80%E5%A4%A9/</link>
      <pubDate>Wed, 08 Jan 2020 18:54:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2020/01/2020-arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%B8%80%E5%A4%A9/</guid>
      <description>Algorithm 题目描述 给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。 Example 输入123-&amp;gt;321 输入-123-&amp;gt;-321 输入1</description>
    </item>
    
    <item>
      <title>Maven发布401问题排查</title>
      <link>http://blog.imcompany.cn/2019/12/maven%E5%8F%91%E5%B8%83401%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/</link>
      <pubDate>Tue, 31 Dec 2019 11:15:55 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2019/12/maven%E5%8F%91%E5%B8%83401%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/</guid>
      <description>日志问题现象 1 Caused by: org.apache.maven.shared.transfer.artifact.deploy.ArtifactDeployerException: Failed to deploy artifacts: Could not transfer artifact com.aa.bb:client:jar:1.0.0-20191231.021137-1 from/to company::default (http://test.company.local/nexus/repository/maven-snapshots): Transfer failed for http://test.company.local/nexus/repository/maven-snapshots/com/aa/bb/client/1.0.0-SNAPSHOT/client-1.0.0-20191231.021137-1.jar 401 Unauthorized 根据提示，401未授权，表面来看就是发布的权限未认证 排查步骤 settings文件是否</description>
    </item>
    
    <item>
      <title>那些有用maven命令</title>
      <link>http://blog.imcompany.cn/2019/12/%E9%82%A3%E4%BA%9B%E6%9C%89%E7%94%A8maven%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Tue, 31 Dec 2019 10:45:55 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2019/12/%E9%82%A3%E4%BA%9B%E6%9C%89%E7%94%A8maven%E5%91%BD%E4%BB%A4/</guid>
      <description>查看当前系统的配置信息 排查问题可以查看当前maven所依赖系统的所有变量(系统变量或者环境变量)信息 1 mvn help:system 查看当前有效的settings文件</description>
    </item>
    
    <item>
      <title>JAVA8问题处理回顾-持续更新</title>
      <link>http://blog.imcompany.cn/2019/08/java8%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86%E5%9B%9E%E9%A1%BE-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Sat, 24 Aug 2019 10:15:55 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2019/08/java8%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86%E5%9B%9E%E9%A1%BE-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</guid>
      <description>金额累加问题 使用Reduce进行累加操作，参考这里 1 2 3 List&amp;lt;BigDecimal&amp;gt; bdList = new ArrayList&amp;lt;&amp;gt;(); //populate list BigDecimal result = bdList.stream().reduce(BigDecimal.ZERO, BigDecimal::add); 查找集合的最后一个元素 JAVA8的Stream只提供了Fin</description>
    </item>
    
    <item>
      <title>Apollo Client自定义问题拾遗</title>
      <link>http://blog.imcompany.cn/2019/07/apollo-client%E8%87%AA%E5%AE%9A%E4%B9%89%E9%97%AE%E9%A2%98%E6%8B%BE%E9%81%97/</link>
      <pubDate>Mon, 01 Jul 2019 07:04:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2019/07/apollo-client%E8%87%AA%E5%AE%9A%E4%B9%89%E9%97%AE%E9%A2%98%E6%8B%BE%E9%81%97/</guid>
      <description>由于公司很多服务要接入Apollo配置中心，并且对于项目的接入有网络要求，根据官方说明，需要自定义Client来完成 接入步骤 新建maven项</description>
    </item>
    
    <item>
      <title>Apollo 配置中心畅游</title>
      <link>http://blog.imcompany.cn/2019/05/apollo-%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E7%95%85%E6%B8%B8/</link>
      <pubDate>Thu, 09 May 2019 17:34:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2019/05/apollo-%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E7%95%85%E6%B8%B8/</guid>
      <description>目前市面上的开源产品 Disconf 2014年7月百度开源的配置管理中心，同样具备配置的管理能力，目前已经不维护了，最近的一次代码提交是两年前了。 Spring Cloud Config 2</description>
    </item>
    
    <item>
      <title>ARTS-打卡第一天</title>
      <link>http://blog.imcompany.cn/2019/05/arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%B8%80%E5%A4%A9/</link>
      <pubDate>Thu, 09 May 2019 17:34:09 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2019/05/arts-%E6%89%93%E5%8D%A1%E7%AC%AC%E4%B8%80%E5%A4%A9/</guid>
      <description>Algorithm LeetCode 第一题 题目描述 给一个int数组，返回数组中两个数字相加的和是目标 数的下标。可以假设每个输入只有一个解决方案，并且不能使用同一个元素两次。</description>
    </item>
    
    <item>
      <title>Centos7 install issue collect</title>
      <link>http://blog.imcompany.cn/2019/05/centos7-install-issue-collect/</link>
      <pubDate>Mon, 06 May 2019 13:00:55 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2019/05/centos7-install-issue-collect/</guid>
      <description>由于工作需要，使用VMWare虚拟机安装了Centos7系统，遇到了很多问题，现在把这些问题记录下来，以备后用。 解决Centos7 yum could not retrieve m</description>
    </item>
    
    <item>
      <title>那些高效的Chrome插件</title>
      <link>http://blog.imcompany.cn/2019/03/%E9%82%A3%E4%BA%9B%E9%AB%98%E6%95%88%E7%9A%84chrome%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Fri, 08 Mar 2019 07:48:34 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2019/03/%E9%82%A3%E4%BA%9B%E9%AB%98%E6%95%88%E7%9A%84chrome%E6%8F%92%E4%BB%B6/</guid>
      <description>1Password extension 密码管理工具1Password的Chrome插件。插件地址 Auto Refresh 自动刷新网页的插件，支持设置刷新时间间隔。插件地址 Awesome Autocomplete for GitHub 在浏览器中为Gi</description>
    </item>
    
    <item>
      <title>那些提高效率的命令行工具</title>
      <link>http://blog.imcompany.cn/2018/09/%E9%82%A3%E4%BA%9B%E6%8F%90%E9%AB%98%E6%95%88%E7%8E%87%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sun, 30 Sep 2018 07:15:55 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/09/%E9%82%A3%E4%BA%9B%E6%8F%90%E9%AB%98%E6%95%88%E7%8E%87%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid>
      <description>brew Mac软件包管理工具。用命令行命令来安装软件，仓库软件丰富。地址 bat bat? No，高端cat，不费眼。带颜色显示，支持git状态，自动分页。地址 cowsay</description>
    </item>
    
    <item>
      <title>那些提高效率的Alfred Workflow</title>
      <link>http://blog.imcompany.cn/2018/09/%E9%82%A3%E4%BA%9B%E6%8F%90%E9%AB%98%E6%95%88%E7%8E%87%E7%9A%84alfred-workflow/</link>
      <pubDate>Fri, 21 Sep 2018 10:02:49 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/09/%E9%82%A3%E4%BA%9B%E6%8F%90%E9%AB%98%E6%95%88%E7%8E%87%E7%9A%84alfred-workflow/</guid>
      <description>Alfred Browser Toolbox Toolbox是一个文件操作浏览的工具，它支持创建、查找文件的功能，还可以查询pdf文件，非常方便。Mac上的Finder使用确定不方</description>
    </item>
    
    <item>
      <title>那些提高效率的Idea插件</title>
      <link>http://blog.imcompany.cn/2018/09/%E9%82%A3%E4%BA%9B%E6%8F%90%E9%AB%98%E6%95%88%E7%8E%87%E7%9A%84idea%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Wed, 05 Sep 2018 08:12:23 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/09/%E9%82%A3%E4%BA%9B%E6%8F%90%E9%AB%98%E6%95%88%E7%8E%87%E7%9A%84idea%E6%8F%92%E4%BB%B6/</guid>
      <description>.ignore 插件说明 ignore文件忽略，支持绝大多数的开发语言，支持直接导航到忽略的文件，在创建时可以选择模板，比如Java开发可以选择Java与I</description>
    </item>
    
    <item>
      <title>设计模式学习之代理模式</title>
      <link>http://blog.imcompany.cn/2018/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 16 Jul 2018 21:08:28 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</guid>
      <description>说明 代理模式是设计模式中使用频率非常的高的模式，像日常生活中的房产中介、外卖平台都属于代理。代理模式就是在访问真正的业务之时不会直接与真正的</description>
    </item>
    
    <item>
      <title>设计模式学习之委托模式</title>
      <link>http://blog.imcompany.cn/2018/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%A7%94%E6%89%98%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 07 Jul 2018 18:53:57 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%A7%94%E6%89%98%E6%A8%A1%E5%BC%8F/</guid>
      <description>说明 委托模式不属于23种设计模式中，但是它在Spring框架中使用的很频繁，Spring的作用在Java的开发是非常大，所以需要学习一下委托</description>
    </item>
    
    <item>
      <title>设计模式学习之观察者</title>
      <link>http://blog.imcompany.cn/2018/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%A7%82%E5%AF%9F%E8%80%85/</link>
      <pubDate>Wed, 04 Jul 2018 20:31:41 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%A7%82%E5%AF%9F%E8%80%85/</guid>
      <description>说明 观察者模式在日常开发中使用频率也是非常高的，它建立了对象与对象之间的关系，一个对象的行为改变会通知到另一个对象，被通知的对象根据通知做出</description>
    </item>
    
    <item>
      <title>设计模式学习之装饰器</title>
      <link>http://blog.imcompany.cn/2018/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%A3%85%E9%A5%B0%E5%99%A8/</link>
      <pubDate>Mon, 02 Jul 2018 20:09:14 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%A3%85%E9%A5%B0%E5%99%A8/</guid>
      <description>说明 装饰器设计模式是使用比较频繁的设计模式，它在不改变原物体的情况对原物体实现了功能的增加，原物体还是一个可单独使用的个体。在JAVA的类库</description>
    </item>
    
    <item>
      <title>设计模式学习之适配器</title>
      <link>http://blog.imcompany.cn/2018/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%80%82%E9%85%8D%E5%99%A8/</link>
      <pubDate>Tue, 26 Jun 2018 21:30:17 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%80%82%E9%85%8D%E5%99%A8/</guid>
      <description>说明 在前面的文章中介绍了一些关于支付相关的功能，现在转向登录，在早些时期的系统登录就是用户使用用户名与密码进行注册，注册成功后就可以进行登录</description>
    </item>
    
    <item>
      <title>设计模式学习之模板模式</title>
      <link>http://blog.imcompany.cn/2018/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 25 Jun 2018 21:06:17 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/</guid>
      <description>说明 在一般实现处理用户支付订单时，通常都会在一个单独的回调项目中来处理用户的支付方式回调。一般情况下，回调的处理过程都是相似的，大体的步骤就</description>
    </item>
    
    <item>
      <title>设计模式学习之策略模式</title>
      <link>http://blog.imcompany.cn/2018/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 20 Jun 2018 07:04:56 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</guid>
      <description>说明 策略模式是设计模式中使用频率很高的模式，主要的就是实现对行为的包装，达到结果的方式有多种，使用者可以选择任何一个方式来得到想要结果，在增</description>
    </item>
    
    <item>
      <title>设计模式学习之工厂模式</title>
      <link>http://blog.imcompany.cn/2018/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 12 Jun 2018 21:33:40 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid>
      <description>说明 工厂设计模式是23种设计模式中使用频率非常高的，属于创建型模式。主要特点是实现了实体创建与使用的分离，达到了解耦的目的。工厂设计模式一般</description>
    </item>
    
    <item>
      <title>设计模式学习之原型模式</title>
      <link>http://blog.imcompany.cn/2018/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 09 Jun 2018 17:12:41 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>特点 原型设计模式就是系统中产生的每一个对象都不相同，通过原型来创建新的对象，原型模式属于创建型模式。 实现方式 一般情况可以通过对象克隆的方式来</description>
    </item>
    
    <item>
      <title>设计模式学习之单例模式</title>
      <link>http://blog.imcompany.cn/2018/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 05 Jun 2018 16:36:08 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>特点 单例模式就是确保在系统中只在一个实例提供功能。单例有好几种写法，主要有饿汉式、懒汉式、静态方法内部类、注册式单例。 饿汉式 饿汉式单例就是在</description>
    </item>
    
    <item>
      <title>Idea中vim键的映射</title>
      <link>http://blog.imcompany.cn/2018/05/idea%E4%B8%ADvim%E9%94%AE%E7%9A%84%E6%98%A0%E5%B0%84/</link>
      <pubDate>Mon, 14 May 2018 14:48:33 +0800</pubDate>
      
      <guid>http://blog.imcompany.cn/2018/05/idea%E4%B8%ADvim%E9%94%AE%E7%9A%84%E6%98%A0%E5%B0%84/</guid>
      <description>Idea中IdeaVim插件可以让我们在Idea中使用vi的按键来进行操作，但是原生的配置只带有一些基本的移动操作。需要在~/.ideavi</description>
    </item>
    
  </channel>
</rss>
